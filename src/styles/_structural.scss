// WRAPPER container elements; cards, headers, footers
.grid-container {
  padding: 1rem;
  display: grid;
  grid-gap: 1rem;
}

@mixin grid-templates-columns($column-count) {
  .grid-columns-#{$column-count} {
    grid-template-columns: repeat($column-count, 1fr);
    @for $i from 1 through $column-count {
      .span-#{$i} {
        grid-column: span $i;
      }
    }
  }
}
// 2, 3, 4, 6, 12 cols
@include grid-templates-columns(12);
@include grid-templates-columns(6);
@include grid-templates-columns(4);
@include grid-templates-columns(3);
@include grid-templates-columns(2);

//.grid-columns-12 {
//  grid-template-columns: repeat(12, 1fr);
//  @for $i from 1 through 12 {
//    .span-#{$i} {
//      grid-column: span $i;
//    }
//  }
//}

.horizontal-scroll {
  overflow-x: auto;
  flex-direction: row;
  display: flex;
  > * {
    margin-right: 1rem;
    &:last-child {
      margin-right: 0;
    }
  }
}

// CONTENT container elements; buttons, form-fields
.grid-content {
  display: grid;
  grid-auto-flow: column;
  grid-column-gap: 0.25rem;
}
.align-end {
  align-items: end;
}
.justify-end {
  justify-items: end;
}

// grid helpers
.grid {
  display: grid;
}

.grid-gap {
  grid-gap: 1rem;
}

// TEXTUAL elements; p tags, info text
// TODO: make a directive to apply wrapper for this style and text content that should go inside.
//  This could have a typed settings input that takes values such as 'information', 'text', or 'data'
//  that would cause the directive to adjust the styles as appropriate to ensure the text always remains
//  with in the 50-60 character happy-place, while still adjusting font-size as appropriate.
.information {
  max-width: 460px;
  text-align: center;
  font-size: 1.25rem;
  padding: 0.25rem;
}

// DELIMITERS
.vertical-divider {
  position: relative;
  &:last-child {
    &:after {
      content: unset;
    }
  }
  &:after {
    content: ' ';
    border-right: 2px solid rgba(0, 0, 0, 0.12);
    position: absolute;
    right: calc(-0.5rem - 1px);
    top: 0;
    bottom: 0;
  }
}
